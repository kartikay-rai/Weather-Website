{"ast":null,"code":"import { MONTHS, DAYS } from './DateConstants';\nconst date = new Date();\nexport function getWeekDays() {\n  const dayInAWeek = new Date().getDay();\n  const days = DAYS.slice(dayInAWeek, DAYS.length).concat(DAYS.slice(0, dayInAWeek));\n  return days;\n}\nexport function getDayMonthFromDate() {\n  const month = MONTHS[date.getMonth()].slice(0, 3);\n  const day = date.getUTCDate();\n  return day + ' ' + month;\n}\nexport function transformDateFormat() {\n  const month = date.toLocaleString('en-US', {\n    month: '2-digit'\n  });\n  const day = date.toLocaleString('en-US', {\n    day: '2-digit'\n  });\n  const year = date.getFullYear();\n  const time = date.toLocaleString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23'\n  });\n  const newFormatDate = year.toString().concat('-', month, '-', day, ' ', time);\n  return newFormatDate;\n}\n\n// export function getUTCDatetime() {\n//   const utcTime = date.toLocaleString('en-US', {\n//     hour: '2-digit',\n//     minute: '2-digit',\n//     hourCycle: 'h23',\n//     timeZone: 'UTC',\n//   });\n\n//   const isoDateString = new Date().toISOString();\n//   const utcDate = isoDateString.split('T')[0].concat(' ', utcTime);\n//   return utcDate;\n// }\n\n// export function getUTCTime() {\n//   const utcTime = date.toLocaleString('en-US', {\n//     hour: '2-digit',\n//     minute: '2-digit',\n//     second: '2-digit',\n//     hourCycle: 'h23',\n//     timeZone: 'UTC',\n//   });\n\n//   return utcTime;\n// }\n\n// New functions for IST conversion\nexport function getISTDatetime() {\n  const options = {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n    timeZone: 'Asia/Kolkata' // IST timezone\n  };\n  return date.toLocaleString('en-IN', options);\n}\nexport function getISTTime() {\n  const options = {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n    timeZone: 'Asia/Kolkata' // IST timezone\n  };\n  return date.toLocaleString('en-IN', options);\n}","map":{"version":3,"names":["MONTHS","DAYS","date","Date","getWeekDays","dayInAWeek","getDay","days","slice","length","concat","getDayMonthFromDate","month","getMonth","day","getUTCDate","transformDateFormat","toLocaleString","year","getFullYear","time","hour","minute","second","hourCycle","newFormatDate","toString","getISTDatetime","options","timeZone","getISTTime"],"sources":["/home/kartikay/Kaalej 2.0/Weather-Website/src/utilities/DatetimeUtils.js"],"sourcesContent":["import { MONTHS, DAYS } from './DateConstants';\n\nconst date = new Date();\n\nexport function getWeekDays() {\n  const dayInAWeek = new Date().getDay();\n  const days = DAYS.slice(dayInAWeek, DAYS.length).concat(\n    DAYS.slice(0, dayInAWeek)\n  );\n  return days;\n}\n\nexport function getDayMonthFromDate() {\n  const month = MONTHS[date.getMonth()].slice(0, 3);\n  const day = date.getUTCDate();\n\n  return day + ' ' + month;\n}\n\nexport function transformDateFormat() {\n  const month = date.toLocaleString('en-US', { month: '2-digit' });\n  const day = date.toLocaleString('en-US', { day: '2-digit' });\n  const year = date.getFullYear();\n  const time = date.toLocaleString('en-US', {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n  });\n\n  const newFormatDate = year.toString().concat('-', month, '-', day, ' ', time);\n  return newFormatDate;\n}\n\n// export function getUTCDatetime() {\n//   const utcTime = date.toLocaleString('en-US', {\n//     hour: '2-digit',\n//     minute: '2-digit',\n//     hourCycle: 'h23',\n//     timeZone: 'UTC',\n//   });\n\n//   const isoDateString = new Date().toISOString();\n//   const utcDate = isoDateString.split('T')[0].concat(' ', utcTime);\n//   return utcDate;\n// }\n\n// export function getUTCTime() {\n//   const utcTime = date.toLocaleString('en-US', {\n//     hour: '2-digit',\n//     minute: '2-digit',\n//     second: '2-digit',\n//     hourCycle: 'h23',\n//     timeZone: 'UTC',\n//   });\n\n//   return utcTime;\n// }\n\n// New functions for IST conversion\nexport function getISTDatetime() {\n  const options = {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n    timeZone: 'Asia/Kolkata', // IST timezone\n  };\n\n  return date.toLocaleString('en-IN', options);\n}\n\nexport function getISTTime() {\n  const options = {\n    hour: '2-digit',\n    minute: '2-digit',\n    second: '2-digit',\n    hourCycle: 'h23',\n    timeZone: 'Asia/Kolkata', // IST timezone\n  };\n\n  return date.toLocaleString('en-IN', options);\n}\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAE9C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;AAEvB,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,MAAMC,UAAU,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC;EACtC,MAAMC,IAAI,GAAGN,IAAI,CAACO,KAAK,CAACH,UAAU,EAAEJ,IAAI,CAACQ,MAAM,CAAC,CAACC,MAAM,CACrDT,IAAI,CAACO,KAAK,CAAC,CAAC,EAAEH,UAAU,CAC1B,CAAC;EACD,OAAOE,IAAI;AACb;AAEA,OAAO,SAASI,mBAAmBA,CAAA,EAAG;EACpC,MAAMC,KAAK,GAAGZ,MAAM,CAACE,IAAI,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACL,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EACjD,MAAMM,GAAG,GAAGZ,IAAI,CAACa,UAAU,CAAC,CAAC;EAE7B,OAAOD,GAAG,GAAG,GAAG,GAAGF,KAAK;AAC1B;AAEA,OAAO,SAASI,mBAAmBA,CAAA,EAAG;EACpC,MAAMJ,KAAK,GAAGV,IAAI,CAACe,cAAc,CAAC,OAAO,EAAE;IAAEL,KAAK,EAAE;EAAU,CAAC,CAAC;EAChE,MAAME,GAAG,GAAGZ,IAAI,CAACe,cAAc,CAAC,OAAO,EAAE;IAAEH,GAAG,EAAE;EAAU,CAAC,CAAC;EAC5D,MAAMI,IAAI,GAAGhB,IAAI,CAACiB,WAAW,CAAC,CAAC;EAC/B,MAAMC,IAAI,GAAGlB,IAAI,CAACe,cAAc,CAAC,OAAO,EAAE;IACxCI,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,aAAa,GAAGP,IAAI,CAACQ,QAAQ,CAAC,CAAC,CAAChB,MAAM,CAAC,GAAG,EAAEE,KAAK,EAAE,GAAG,EAAEE,GAAG,EAAE,GAAG,EAAEM,IAAI,CAAC;EAC7E,OAAOK,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO,SAASE,cAAcA,CAAA,EAAG;EAC/B,MAAMC,OAAO,GAAG;IACdV,IAAI,EAAE,SAAS;IACfN,KAAK,EAAE,SAAS;IAChBE,GAAG,EAAE,SAAS;IACdO,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE,KAAK;IAChBK,QAAQ,EAAE,cAAc,CAAE;EAC5B,CAAC;EAED,OAAO3B,IAAI,CAACe,cAAc,CAAC,OAAO,EAAEW,OAAO,CAAC;AAC9C;AAEA,OAAO,SAASE,UAAUA,CAAA,EAAG;EAC3B,MAAMF,OAAO,GAAG;IACdP,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE,KAAK;IAChBK,QAAQ,EAAE,cAAc,CAAE;EAC5B,CAAC;EAED,OAAO3B,IAAI,CAACe,cAAc,CAAC,OAAO,EAAEW,OAAO,CAAC;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}