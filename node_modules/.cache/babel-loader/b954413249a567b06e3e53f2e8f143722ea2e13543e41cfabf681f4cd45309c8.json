{"ast":null,"code":"var _jsxFileName = \"/home/kartikay/Kaalej 2.0/Weather-Website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Grid, SvgIcon, Typography, Button } from '@mui/material';\nimport Search from './components/Search/Search';\nimport WeeklyForecast from './components/WeeklyForecast/WeeklyForecast';\nimport TodayWeather from './components/TodayWeather/TodayWeather';\nimport { fetchWeatherData } from './api/OpenWeatherService';\nimport { transformDateFormat } from './utilities/DatetimeUtils';\nimport UTCDatetime from './components/Reusable/UTCDatetime';\nimport LoadingBox from './components/Reusable/LoadingBox';\nimport { ReactComponent as SplashIcon } from './assets/splash-icon.svg';\nimport Logo from './assets/logo.png';\nimport ErrorBox from './components/Reusable/ErrorBox';\nimport WindyEmbed from './components/Reusable/WindyEmbed';\nimport { ALL_DESCRIPTIONS } from './utilities/DateConstants';\nimport { getTodayForecastWeather, getWeekForecastWeather } from './utilities/DataUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todayWeather, setTodayWeather] = useState(null);\n  const [todayForecast, setTodayForecast] = useState([]);\n  const [weekForecast, setWeekForecast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [location, setLocation] = useState(null); // For storing current location data\n  const [locationRequested, setLocationRequested] = useState(false); // For triggering location request only once\n  const [locationName, setLocationName] = useState(''); // For storing the name of the location\n\n  useEffect(() => {\n    // Request location when the component mounts\n    if (navigator.geolocation && !locationRequested) {\n      setLocationRequested(true);\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setLocation({\n          latitude,\n          longitude\n        });\n        fetchWeatherForCurrentLocation(latitude, longitude);\n        fetchLocationName(latitude, longitude); // Fetch location name\n      }, error => {\n        // Gracefully handle location denial\n        console.warn('Location access denied, defaulting to city search.');\n      });\n    }\n  }, [locationRequested]);\n  const fetchLocationName = async (latitude, longitude) => {\n    try {\n      // Reverse geocoding to get the city name\n      const response = await fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=44dcd0c54ecce1198ef942f9e391338f\");\n      const data = await response.json();\n      setLocationName(data.name); // Set the city name\n    } catch (err) {\n      console.error('Error fetching location name:', err);\n    }\n  };\n  const fetchWeatherForCurrentLocation = async (latitude, longitude) => {\n    setIsLoading(true);\n    const currentDate = transformDateFormat();\n    const date = new Date();\n    let dt_now = Math.floor(date.getTime() / 1000);\n    try {\n      const [todayWeatherResponse, weekForecastResponse] = await fetchWeatherData(latitude, longitude);\n      const all_today_forecasts_list = getTodayForecastWeather(weekForecastResponse, currentDate, dt_now);\n      const all_week_forecasts_list = getWeekForecastWeather(weekForecastResponse, ALL_DESCRIPTIONS);\n      setTodayForecast([...all_today_forecasts_list]);\n      setTodayWeather({\n        city: locationName || 'Current Location',\n        ...todayWeatherResponse\n      });\n      setWeekForecast({\n        city: locationName || 'Current Location',\n        list: all_week_forecasts_list\n      });\n    } catch (error) {\n      setError(true);\n    }\n    setIsLoading(false);\n  };\n  const searchChangeHandler = async enteredData => {\n    const [latitude, longitude] = enteredData.value.split(' ');\n    setIsLoading(true);\n    const currentDate = transformDateFormat();\n    const date = new Date();\n    let dt_now = Math.floor(date.getTime() / 1000);\n    try {\n      const [todayWeatherResponse, weekForecastResponse] = await fetchWeatherData(latitude, longitude);\n      const all_today_forecasts_list = getTodayForecastWeather(weekForecastResponse, currentDate, dt_now);\n      const all_week_forecasts_list = getWeekForecastWeather(weekForecastResponse, ALL_DESCRIPTIONS);\n      setTodayForecast([...all_today_forecasts_list]);\n      setTodayWeather({\n        city: enteredData.label,\n        ...todayWeatherResponse\n      });\n      setWeekForecast({\n        city: enteredData.label,\n        list: all_week_forecasts_list\n      });\n    } catch (error) {\n      setError(true);\n    }\n    setIsLoading(false);\n  };\n  let appContent = /*#__PURE__*/_jsxDEV(Box, {\n    xs: 12,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    sx: {\n      width: '100%',\n      minHeight: '500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(SvgIcon, {\n      component: SplashIcon,\n      inheritViewBox: true,\n      sx: {\n        fontSize: {\n          xs: '100px',\n          sm: '120px',\n          md: '140px'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h4\",\n      sx: {\n        fontSize: {\n          xs: '12px',\n          sm: '14px'\n        },\n        color: 'rgba(255,255,255, .85)',\n        fontFamily: 'Poppins',\n        textAlign: 'center',\n        margin: '2rem 0',\n        maxWidth: '80%',\n        lineHeight: '22px'\n      },\n      children: \"Explore current weather data and 6-day forecast of more than 200,000 cities!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setLocation({\n          latitude,\n          longitude\n        });\n        fetchWeatherForCurrentLocation(latitude, longitude);\n        fetchLocationName(latitude, longitude); // Fetch location name\n      }, error => console.warn('Location access denied')),\n      children: \"Use Current Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n  if (todayWeather && todayForecast && weekForecast) {\n    appContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: todayWeather ? 6 : 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TodayWeather, {\n            data: todayWeather,\n            forecastList: todayForecast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(WeeklyForecast, {\n          data: weekForecast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    appContent = /*#__PURE__*/_jsxDEV(ErrorBox, {\n      margin: \"3rem auto\",\n      flex: \"inherit\",\n      errorMessage: \"Something went wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this);\n  }\n  if (isLoading) {\n    appContent = /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        minHeight: '500px'\n      },\n      children: /*#__PURE__*/_jsxDEV(LoadingBox, {\n        value: \"1\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h3\",\n          sx: {\n            fontSize: {\n              xs: '10px',\n              sm: '12px'\n            },\n            color: 'rgba(255, 255, 255, .8)',\n            lineHeight: 1,\n            fontFamily: 'Poppins'\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      maxWidth: {\n        xs: '95%',\n        sm: '80%',\n        md: '90%'\n      },\n      width: '100%',\n      height: '100%',\n      margin: '0 auto',\n      padding: '1rem 0 2rem',\n      marginBottom: '1rem',\n      borderRadius: {\n        xs: 'none',\n        sm: '0 0 1rem 1rem'\n      },\n      boxShadow: {\n        xs: 'none',\n        sm: 'rgba(0,0,0, 0.5) 0px 10px 15px -3px, rgba(0,0,0, 0.5) 0px 4px 6px -2px'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      columnSpacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          sx: {\n            width: '100%',\n            marginBottom: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            component: \"img\",\n            sx: {\n              height: {\n                xs: '46px',\n                sm: '52px',\n                md: '56px'\n              },\n              width: 'auto'\n            },\n            alt: \"logo\",\n            src: Logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UTCDatetime, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          onSearchChange: searchChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), appContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: '3rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(WindyEmbed, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LGzYtGMbTfIvgVI0KFIk0d+d98k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Grid","SvgIcon","Typography","Button","Search","WeeklyForecast","TodayWeather","fetchWeatherData","transformDateFormat","UTCDatetime","LoadingBox","ReactComponent","SplashIcon","Logo","ErrorBox","WindyEmbed","ALL_DESCRIPTIONS","getTodayForecastWeather","getWeekForecastWeather","jsxDEV","_jsxDEV","App","_s","todayWeather","setTodayWeather","todayForecast","setTodayForecast","weekForecast","setWeekForecast","isLoading","setIsLoading","error","setError","location","setLocation","locationRequested","setLocationRequested","locationName","setLocationName","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetchWeatherForCurrentLocation","fetchLocationName","console","warn","response","fetch","data","json","name","err","currentDate","date","Date","dt_now","Math","floor","getTime","todayWeatherResponse","weekForecastResponse","all_today_forecasts_list","all_week_forecasts_list","city","list","searchChangeHandler","enteredData","value","split","label","appContent","xs","display","flexDirection","alignItems","justifyContent","sx","width","minHeight","children","component","inheritViewBox","fontSize","sm","md","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","fontFamily","textAlign","margin","maxWidth","lineHeight","onClick","Fragment","item","forecastList","flex","errorMessage","height","padding","marginBottom","borderRadius","boxShadow","container","columnSpacing","alt","src","onSearchChange","marginTop","_c","$RefreshReg$"],"sources":["/home/kartikay/Kaalej 2.0/Weather-Website/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Container, Grid, SvgIcon, Typography, Button } from '@mui/material';\nimport Search from './components/Search/Search';\nimport WeeklyForecast from './components/WeeklyForecast/WeeklyForecast';\nimport TodayWeather from './components/TodayWeather/TodayWeather';\nimport { fetchWeatherData } from './api/OpenWeatherService';\nimport { transformDateFormat } from './utilities/DatetimeUtils';\nimport UTCDatetime from './components/Reusable/UTCDatetime';\nimport LoadingBox from './components/Reusable/LoadingBox';\nimport { ReactComponent as SplashIcon } from './assets/splash-icon.svg';\nimport Logo from './assets/logo.png';\nimport ErrorBox from './components/Reusable/ErrorBox';\nimport WindyEmbed from './components/Reusable/WindyEmbed'; \nimport { ALL_DESCRIPTIONS } from './utilities/DateConstants';\nimport {\n  getTodayForecastWeather,\n  getWeekForecastWeather,\n} from './utilities/DataUtils';\n\nfunction App() {\n  const [todayWeather, setTodayWeather] = useState(null);\n  const [todayForecast, setTodayForecast] = useState([]);\n  const [weekForecast, setWeekForecast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [location, setLocation] = useState(null); // For storing current location data\n  const [locationRequested, setLocationRequested] = useState(false); // For triggering location request only once\n  const [locationName, setLocationName] = useState(''); // For storing the name of the location\n\n  useEffect(() => {\n    // Request location when the component mounts\n    if (navigator.geolocation && !locationRequested) {\n      setLocationRequested(true);\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setLocation({ latitude, longitude });\n          fetchWeatherForCurrentLocation(latitude, longitude);\n          fetchLocationName(latitude, longitude); // Fetch location name\n        },\n        (error) => {\n          // Gracefully handle location denial\n          console.warn('Location access denied, defaulting to city search.');\n        }\n      );\n    }\n  }, [locationRequested]);\n\n  const fetchLocationName = async (latitude, longitude) => {\n    try {\n      // Reverse geocoding to get the city name\n      const response = await fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=44dcd0c54ecce1198ef942f9e391338f\");\n      const data = await response.json();\n      setLocationName(data.name); // Set the city name\n    } catch (err) {\n      console.error('Error fetching location name:', err);\n    }\n  };\n\n  const fetchWeatherForCurrentLocation = async (latitude, longitude) => {\n    setIsLoading(true);\n\n    const currentDate = transformDateFormat();\n    const date = new Date();\n    let dt_now = Math.floor(date.getTime() / 1000);\n\n    try {\n      const [todayWeatherResponse, weekForecastResponse] = await fetchWeatherData(latitude, longitude);\n      const all_today_forecasts_list = getTodayForecastWeather(weekForecastResponse, currentDate, dt_now);\n      const all_week_forecasts_list = getWeekForecastWeather(weekForecastResponse, ALL_DESCRIPTIONS);\n\n      setTodayForecast([...all_today_forecasts_list]);\n      setTodayWeather({ city: locationName || 'Current Location', ...todayWeatherResponse });\n      setWeekForecast({\n        city: locationName || 'Current Location',\n        list: all_week_forecasts_list,\n      });\n    } catch (error) {\n      setError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  const searchChangeHandler = async (enteredData) => {\n    const [latitude, longitude] = enteredData.value.split(' ');\n\n    setIsLoading(true);\n\n    const currentDate = transformDateFormat();\n    const date = new Date();\n    let dt_now = Math.floor(date.getTime() / 1000);\n\n    try {\n      const [todayWeatherResponse, weekForecastResponse] = await fetchWeatherData(latitude, longitude);\n      const all_today_forecasts_list = getTodayForecastWeather(weekForecastResponse, currentDate, dt_now);\n      const all_week_forecasts_list = getWeekForecastWeather(weekForecastResponse, ALL_DESCRIPTIONS);\n\n      setTodayForecast([...all_today_forecasts_list]);\n      setTodayWeather({ city: enteredData.label, ...todayWeatherResponse });\n      setWeekForecast({\n        city: enteredData.label,\n        list: all_week_forecasts_list,\n      });\n    } catch (error) {\n      setError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  let appContent = (\n    <Box\n      xs={12}\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      sx={{\n        width: '100%',\n        minHeight: '500px',\n      }}\n    >\n      <SvgIcon\n        component={SplashIcon}\n        inheritViewBox\n        sx={{ fontSize: { xs: '100px', sm: '120px', md: '140px' } }}\n      />\n      <Typography\n        variant=\"h4\"\n        component=\"h4\"\n        sx={{\n          fontSize: { xs: '12px', sm: '14px' },\n          color: 'rgba(255,255,255, .85)',\n          fontFamily: 'Poppins',\n          textAlign: 'center',\n          margin: '2rem 0',\n          maxWidth: '80%',\n          lineHeight: '22px',\n        }}\n      >\n        Explore current weather data and 6-day forecast of more than 200,000\n        cities!\n      </Typography>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const { latitude, longitude } = position.coords;\n            setLocation({ latitude, longitude });\n            fetchWeatherForCurrentLocation(latitude, longitude);\n            fetchLocationName(latitude, longitude); // Fetch location name\n          },\n          (error) => console.warn('Location access denied')\n        )}\n      >\n        Use Current Location\n      </Button>\n    </Box>\n  );\n\n  if (todayWeather && todayForecast && weekForecast) {\n    appContent = (\n      <React.Fragment>\n        <Grid item xs={12} md={todayWeather ? 6 : 12}>\n          <Grid item xs={12}>\n            <TodayWeather data={todayWeather} forecastList={todayForecast} />\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <WeeklyForecast data={weekForecast} />\n        </Grid>\n      </React.Fragment>\n    );\n  }\n\n  if (error) {\n    appContent = (\n      <ErrorBox\n        margin=\"3rem auto\"\n        flex=\"inherit\"\n        errorMessage=\"Something went wrong\"\n      />\n    );\n  }\n\n  if (isLoading) {\n    appContent = (\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          minHeight: '500px',\n        }}\n      >\n        <LoadingBox value=\"1\">\n          <Typography\n            variant=\"h3\"\n            component=\"h3\"\n            sx={{\n              fontSize: { xs: '10px', sm: '12px' },\n              color: 'rgba(255, 255, 255, .8)',\n              lineHeight: 1,\n              fontFamily: 'Poppins',\n            }}\n          >\n            Loading...\n          </Typography>\n        </LoadingBox>\n      </Box>\n    );\n  }\n\n  return (\n    <Container\n      sx={{\n        maxWidth: { xs: '95%', sm: '80%', md: '90%' },\n        width: '100%',\n        height: '100%',\n        margin: '0 auto',\n        padding: '1rem 0 2rem',\n        marginBottom: '1rem',\n        borderRadius: {\n          xs: 'none',\n          sm: '0 0 1rem 1rem',\n        },\n        boxShadow: {\n          xs: 'none',\n          sm: 'rgba(0,0,0, 0.5) 0px 10px 15px -3px, rgba(0,0,0, 0.5) 0px 4px 6px -2px',\n        },\n      }}\n    >\n      <Grid container columnSpacing={2}>\n        <Grid item xs={12}>\n          <Box\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            sx={{\n              width: '100%',\n              marginBottom: '1rem',\n            }}\n          >\n            <Box\n              component=\"img\"\n              sx={{\n                height: { xs: '46px', sm: '52px', md: '56px' },\n                width: 'auto',\n              }}\n              alt=\"logo\"\n              src={Logo}\n            />\n\n            <UTCDatetime />\n          </Box>\n          <Search onSearchChange={searchChangeHandler} />\n        </Grid>\n        {appContent}\n      </Grid>\n      <Box sx={{ marginTop: '3rem' }}>\n        <WindyEmbed />\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}