{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADITYA\\\\Desktop\\\\New_SE\\\\Weather-Website\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Grid, Typography, Button, CssBaseline } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport Search from './components/Search/Search';\nimport WeeklyForecast from './components/WeeklyForecast/WeeklyForecast';\nimport TodayWeather from './components/TodayWeather/TodayWeather';\nimport WindyEmbed from './components/Reusable/WindyEmbed';\nimport ErrorBox from './components/Reusable/ErrorBox';\nimport LoadingBox from './components/Reusable/LoadingBox';\nimport Logo from './assets/logo.png';\nimport UTCDatetime from './components/Reusable/UTCDatetime';\nimport { fetchWeatherData } from './api/OpenWeatherService';\n\n// Step 1: Define Light and Dark Themes\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTheme = mode => createTheme({\n  palette: {\n    mode,\n    background: {\n      default: mode === 'dark' ? '#121212' : '#f5f5f5'\n    },\n    text: {\n      primary: mode === 'dark' ? '#ffffff' : '#000000'\n    }\n  }\n});\nfunction App() {\n  _s();\n  const [themeMode, setThemeMode] = useState('light');\n  const [todayWeather, setTodayWeather] = useState(null);\n  const [weekForecast, setWeekForecast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [userLocation, setUserLocation] = useState(null);\n\n  // Step 2: Toggle Theme\n  const handleThemeToggle = () => {\n    setThemeMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n\n  // Step 3: Fetch Weather Data using Geolocation\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setUserLocation({\n          latitude,\n          longitude\n        });\n        fetchWeatherForLocation(latitude, longitude);\n      }, error => {\n        setError(true);\n        console.log('Geolocation Error:', error.message);\n      });\n    } else {\n      setError(true);\n    }\n  }, []);\n\n  // Fetch weather based on user's location\n  const fetchWeatherForLocation = async (latitude, longitude) => {\n    setIsLoading(true);\n    try {\n      const [todayWeatherResponse, weekForecastResponse] = await fetchWeatherData(latitude, longitude);\n      setTodayWeather(todayWeatherResponse);\n      setWeekForecast(weekForecastResponse);\n    } catch (error) {\n      setError(true);\n    }\n    setIsLoading(false);\n  };\n\n  // Step 4: Render Content\n  let content;\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(LoadingBox, {\n      value: \"1\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }, this);\n  } else if (error) {\n    content = /*#__PURE__*/_jsxDEV(ErrorBox, {\n      errorMessage: \"Something went wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }, this);\n  } else if (todayWeather && weekForecast) {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TodayWeather, {\n        data: todayWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeeklyForecast, {\n        data: weekForecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      textAlign: \"center\",\n      mt: 4,\n      children: \"Please search for a location or enable geolocation to see the weather.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: getTheme(themeMode),\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        padding: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"img\",\n          src: Logo,\n          alt: \"logo\",\n          sx: {\n            height: 50,\n            marginBottom: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleThemeToggle,\n          variant: \"contained\",\n          children: \"Toggle Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UTCDatetime, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        onSearchChange: fetchWeatherForLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 4,\n        mt: 2,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WindyEmbed, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xt3NKp2QCp0t5KS3wYGU11lXjxk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Grid","Typography","Button","CssBaseline","createTheme","ThemeProvider","Search","WeeklyForecast","TodayWeather","WindyEmbed","ErrorBox","LoadingBox","Logo","UTCDatetime","fetchWeatherData","jsxDEV","_jsxDEV","Fragment","_Fragment","getTheme","mode","palette","background","default","text","primary","App","_s","themeMode","setThemeMode","todayWeather","setTodayWeather","weekForecast","setWeekForecast","isLoading","setIsLoading","error","setError","userLocation","setUserLocation","handleThemeToggle","prevMode","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetchWeatherForLocation","console","log","message","todayWeatherResponse","weekForecastResponse","content","value","children","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","data","variant","textAlign","mt","theme","sx","padding","display","justifyContent","alignItems","component","src","alt","height","marginBottom","onClick","onSearchChange","container","spacing","_c","$RefreshReg$"],"sources":["C:/Users/ADITYA/Desktop/New_SE/Weather-Website/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  CssBaseline,\r\n} from '@mui/material';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport Search from './components/Search/Search';\r\nimport WeeklyForecast from './components/WeeklyForecast/WeeklyForecast';\r\nimport TodayWeather from './components/TodayWeather/TodayWeather';\r\nimport WindyEmbed from './components/Reusable/WindyEmbed';\r\nimport ErrorBox from './components/Reusable/ErrorBox';\r\nimport LoadingBox from './components/Reusable/LoadingBox';\r\nimport Logo from './assets/logo.png';\r\nimport UTCDatetime from './components/Reusable/UTCDatetime';\r\nimport { fetchWeatherData } from './api/OpenWeatherService';\r\n\r\n// Step 1: Define Light and Dark Themes\r\nconst getTheme = (mode) =>\r\n  createTheme({\r\n    palette: {\r\n      mode,\r\n      background: {\r\n        default: mode === 'dark' ? '#121212' : '#f5f5f5',\r\n      },\r\n      text: {\r\n        primary: mode === 'dark' ? '#ffffff' : '#000000',\r\n      },\r\n    },\r\n  });\r\n\r\nfunction App() {\r\n  const [themeMode, setThemeMode] = useState('light');\r\n  const [todayWeather, setTodayWeather] = useState(null);\r\n  const [weekForecast, setWeekForecast] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [userLocation, setUserLocation] = useState(null);\r\n\r\n  // Step 2: Toggle Theme\r\n  const handleThemeToggle = () => {\r\n    setThemeMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  // Step 3: Fetch Weather Data using Geolocation\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setUserLocation({ latitude, longitude });\r\n          fetchWeatherForLocation(latitude, longitude);\r\n        },\r\n        (error) => {\r\n          setError(true);\r\n          console.log('Geolocation Error:', error.message);\r\n        }\r\n      );\r\n    } else {\r\n      setError(true);\r\n    }\r\n  }, []);\r\n\r\n  // Fetch weather based on user's location\r\n  const fetchWeatherForLocation = async (latitude, longitude) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const [todayWeatherResponse, weekForecastResponse] = await fetchWeatherData(\r\n        latitude,\r\n        longitude\r\n      );\r\n      setTodayWeather(todayWeatherResponse);\r\n      setWeekForecast(weekForecastResponse);\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  // Step 4: Render Content\r\n  let content;\r\n  if (isLoading) {\r\n    content = <LoadingBox value=\"1\">Loading...</LoadingBox>;\r\n  } else if (error) {\r\n    content = <ErrorBox errorMessage=\"Something went wrong\" />;\r\n  } else if (todayWeather && weekForecast) {\r\n    content = (\r\n      <>\r\n        <TodayWeather data={todayWeather} />\r\n        <WeeklyForecast data={weekForecast} />\r\n      </>\r\n    );\r\n  } else {\r\n    content = (\r\n      <Typography variant=\"h6\" textAlign=\"center\" mt={4}>\r\n        Please search for a location or enable geolocation to see the weather.\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={getTheme(themeMode)}>\r\n      <CssBaseline />\r\n      <Container sx={{ padding: '2rem' }}>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Box\r\n            component=\"img\"\r\n            src={Logo}\r\n            alt=\"logo\"\r\n            sx={{ height: 50, marginBottom: 2 }}\r\n          />\r\n          <Button onClick={handleThemeToggle} variant=\"contained\">\r\n            Toggle Theme\r\n          </Button>\r\n        </Box>\r\n        <UTCDatetime />\r\n        <Search onSearchChange={fetchWeatherForLocation} />\r\n        <Grid container spacing={4} mt={2}>\r\n          {content}\r\n        </Grid>\r\n        <WindyEmbed />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}